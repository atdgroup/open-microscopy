# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _Camera
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


class Camera(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Camera, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Camera, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_cops"] = _Camera.Camera__cops_set
    __swig_getmethods__["_cops"] = _Camera.Camera__cops_get
    if _newclass:_cops = _swig_property(_Camera.Camera__cops_get, _Camera.Camera__cops_set)
    __swig_setmethods__["_camera_window"] = _Camera.Camera__camera_window_set
    __swig_getmethods__["_camera_window"] = _Camera.Camera__camera_window_get
    if _newclass:_camera_window = _swig_property(_Camera.Camera__camera_window_get, _Camera.Camera__camera_window_set)
    __swig_setmethods__["_timer"] = _Camera.Camera__timer_set
    __swig_getmethods__["_timer"] = _Camera.Camera__timer_get
    if _newclass:_timer = _swig_property(_Camera.Camera__timer_get, _Camera.Camera__timer_set)
    __swig_setmethods__["_colour_type"] = _Camera.Camera__colour_type_set
    __swig_getmethods__["_colour_type"] = _Camera.Camera__colour_type_get
    if _newclass:_colour_type = _swig_property(_Camera.Camera__colour_type_get, _Camera.Camera__colour_type_set)
    __swig_setmethods__["_data_mode"] = _Camera.Camera__data_mode_set
    __swig_getmethods__["_data_mode"] = _Camera.Camera__data_mode_get
    if _newclass:_data_mode = _swig_property(_Camera.Camera__data_mode_get, _Camera.Camera__data_mode_set)
    __swig_setmethods__["_aquire_mode"] = _Camera.Camera__aquire_mode_set
    __swig_getmethods__["_aquire_mode"] = _Camera.Camera__aquire_mode_get
    if _newclass:_aquire_mode = _swig_property(_Camera.Camera__aquire_mode_get, _Camera.Camera__aquire_mode_set)
    __swig_setmethods__["_flip"] = _Camera.Camera__flip_set
    __swig_getmethods__["_flip"] = _Camera.Camera__flip_get
    if _newclass:_flip = _swig_property(_Camera.Camera__flip_get, _Camera.Camera__flip_set)
    __swig_setmethods__["_main_ui_panel"] = _Camera.Camera__main_ui_panel_set
    __swig_getmethods__["_main_ui_panel"] = _Camera.Camera__main_ui_panel_get
    if _newclass:_main_ui_panel = _swig_property(_Camera.Camera__main_ui_panel_get, _Camera.Camera__main_ui_panel_set)
    __swig_setmethods__["_extra_ui_panel"] = _Camera.Camera__extra_ui_panel_set
    __swig_getmethods__["_extra_ui_panel"] = _Camera.Camera__extra_ui_panel_get
    if _newclass:_extra_ui_panel = _swig_property(_Camera.Camera__extra_ui_panel_get, _Camera.Camera__extra_ui_panel_set)
    __swig_setmethods__["_powered_up"] = _Camera.Camera__powered_up_set
    __swig_getmethods__["_powered_up"] = _Camera.Camera__powered_up_get
    if _newclass:_powered_up = _swig_property(_Camera.Camera__powered_up_get, _Camera.Camera__powered_up_set)
    __swig_setmethods__["_average_frames"] = _Camera.Camera__average_frames_set
    __swig_getmethods__["_average_frames"] = _Camera.Camera__average_frames_get
    if _newclass:_average_frames = _swig_property(_Camera.Camera__average_frames_get, _Camera.Camera__average_frames_set)
    __swig_setmethods__["_exposure_time"] = _Camera.Camera__exposure_time_set
    __swig_getmethods__["_exposure_time"] = _Camera.Camera__exposure_time_get
    if _newclass:_exposure_time = _swig_property(_Camera.Camera__exposure_time_get, _Camera.Camera__exposure_time_set)
    __swig_setmethods__["_gain"] = _Camera.Camera__gain_set
    __swig_getmethods__["_gain"] = _Camera.Camera__gain_get
    if _newclass:_gain = _swig_property(_Camera.Camera__gain_get, _Camera.Camera__gain_set)
    __swig_setmethods__["_microns_per_pixel"] = _Camera.Camera__microns_per_pixel_set
    __swig_getmethods__["_microns_per_pixel"] = _Camera.Camera__microns_per_pixel_get
    if _newclass:_microns_per_pixel = _swig_property(_Camera.Camera__microns_per_pixel_get, _Camera.Camera__microns_per_pixel_set)
    __swig_setmethods__["_name"] = _Camera.Camera__name_set
    __swig_getmethods__["_name"] = _Camera.Camera__name_get
    if _newclass:_name = _swig_property(_Camera.Camera__name_get, _Camera.Camera__name_set)
    __swig_setmethods__["_description"] = _Camera.Camera__description_set
    __swig_getmethods__["_description"] = _Camera.Camera__description_get
    if _newclass:_description = _swig_property(_Camera.Camera__description_get, _Camera.Camera__description_set)
    __swig_setmethods__["_data_dir"] = _Camera.Camera__data_dir_set
    __swig_getmethods__["_data_dir"] = _Camera.Camera__data_dir_get
    if _newclass:_data_dir = _swig_property(_Camera.Camera__data_dir_get, _Camera.Camera__data_dir_set)
    __swig_setmethods__["_bits"] = _Camera.Camera__bits_set
    __swig_getmethods__["_bits"] = _Camera.Camera__bits_get
    if _newclass:_bits = _swig_property(_Camera.Camera__bits_get, _Camera.Camera__bits_set)
    __swig_setmethods__["_trigger_mode"] = _Camera.Camera__trigger_mode_set
    __swig_getmethods__["_trigger_mode"] = _Camera.Camera__trigger_mode_get
    if _newclass:_trigger_mode = _swig_property(_Camera.Camera__trigger_mode_get, _Camera.Camera__trigger_mode_set)
    __swig_setmethods__["signal_table"] = _Camera.Camera_signal_table_set
    __swig_getmethods__["signal_table"] = _Camera.Camera_signal_table_get
    if _newclass:signal_table = _swig_property(_Camera.Camera_signal_table_get, _Camera.Camera_signal_table_set)
    __swig_setmethods__["_error_handler"] = _Camera.Camera__error_handler_set
    __swig_getmethods__["_error_handler"] = _Camera.Camera__error_handler_get
    if _newclass:_error_handler = _swig_property(_Camera.Camera__error_handler_get, _Camera.Camera__error_handler_set)
    def __init__(self, *args): 
        this = _Camera.new_Camera(*args)
        try: self.this.append(this)
        except: self.this = this
    def Init(*args): return _Camera.Camera_Init(*args)
    def Destroy(*args): return _Camera.Camera_Destroy(*args)
    def SetDataDir(*args): return _Camera.Camera_SetDataDir(*args)
    def GetDataDir(*args): return _Camera.Camera_GetDataDir(*args)
    def SetDescription(*args): return _Camera.Camera_SetDescription(*args)
    def GetDescription(*args): return _Camera.Camera_GetDescription(*args)
    def SetName(*args): return _Camera.Camera_SetName(*args)
    def GetName(*args): return _Camera.Camera_GetName(*args)
    def SetBlackLevel(*args): return _Camera.Camera_SetBlackLevel(*args)
    def GetBlackLevel(*args): return _Camera.Camera_GetBlackLevel(*args)
    def SetDataMode(*args): return _Camera.Camera_SetDataMode(*args)
    def GetDataMode(*args): return _Camera.Camera_GetDataMode(*args)
    def SetHighestDataMode(*args): return _Camera.Camera_SetHighestDataMode(*args)
    def SetLightMode(*args): return _Camera.Camera_SetLightMode(*args)
    def GetLightMode(*args): return _Camera.Camera_GetLightMode(*args)
    def GetDataType(*args): return _Camera.Camera_GetDataType(*args)
    def SetAverageFrameNumber(*args): return _Camera.Camera_SetAverageFrameNumber(*args)
    def GetAverageFrameNumber(*args): return _Camera.Camera_GetAverageFrameNumber(*args)
    def PowerUp(*args): return _Camera.Camera_PowerUp(*args)
    def PowerDown(*args): return _Camera.Camera_PowerDown(*args)
    def IsPoweredUp(*args): return _Camera.Camera_IsPoweredUp(*args)
    def GetColourType(*args): return _Camera.Camera_GetColourType(*args)
    __swig_destroy__ = _Camera.delete_Camera
    __del__ = lambda self : None;
Camera_swigregister = _Camera.Camera_swigregister
Camera_swigregister(Camera)



